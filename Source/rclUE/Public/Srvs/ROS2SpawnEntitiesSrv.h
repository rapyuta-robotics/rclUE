// Copyright 2021 Rapyuta Robotics Co., Ltd.
// This code has been autogenerated from UE_msgs/SpawnEntities.srv - do not modify

#pragma once

#include <CoreMinimal.h>

#include "Srvs/ROS2GenericSrv.h"
#include "rclcUtilities.h"
#include "ue_msgs/srv/spawn_entities.h"

#include "ROS2SpawnEntitiesSrv.generated.h"

// potential problem: if this struct is defined multiple times!
USTRUCT(Blueprintable)
struct RCLUE_API FROSSpawnEntities_Request
{
	GENERATED_BODY()

public:
	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	FString xml;

	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	TArray<FString> spawn_state_xml;

	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	TArray<FString> spawn_state_name;

	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	TArray<FVector> spawn_state_pose_position;

	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	TArray<FQuat> spawn_state_pose_orientation;

	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	TArray<FVector> spawn_state_twist_linear;

	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	TArray<FVector> spawn_state_twist_angular;

	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	TArray<FString> spawn_state_reference_frame;

	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	TArray<FString> spawn_state_tags;


	void SetFromROS2(const ue_msgs__srv__SpawnEntities_Request& in_ros_data)
	{
    	xml.AppendChars(in_ros_data.xml.data, in_ros_data.xml.size);

		for (int i = 0; i < in_ros_data.spawn_state.size; i++)
		{
			spawn_state_xml.Add("");
			spawn_state_xml[i].AppendChars(in_ros_data.spawn_state.data[i].xml.data,in_ros_data.spawn_state.data[i].xml.size);
		}

		for (int i = 0; i < in_ros_data.spawn_state.size; i++)
		{
			spawn_state_name.Add("");
			spawn_state_name[i].AppendChars(in_ros_data.spawn_state.data[i].state.name.data,in_ros_data.spawn_state.data[i].state.name.size);
		}

		for (int i = 0; i < in_ros_data.spawn_state.size; i++)
		{
			spawn_state_pose_position.Add( FVector( in_ros_data.spawn_state.data[i].state.pose.position.x, in_ros_data.spawn_state.data[i].state.pose.position.y, in_ros_data.spawn_state.data[i].state.pose.position.z ) );
			spawn_state_pose_orientation.Add( FQuat( in_ros_data.spawn_state.data[i].state.pose.orientation.x, in_ros_data.spawn_state.data[i].state.pose.orientation.y, in_ros_data.spawn_state.data[i].state.pose.orientation.z, in_ros_data.spawn_state.data[i].state.pose.orientation.w ) );
		}

		for (int i = 0; i < in_ros_data.spawn_state.size; i++)
		{
			spawn_state_twist_linear.Add( FVector( in_ros_data.spawn_state.data[i].state.twist.linear.x, in_ros_data.spawn_state.data[i].state.twist.linear.y, in_ros_data.spawn_state.data[i].state.twist.linear.z ) );
			spawn_state_twist_angular.Add( FVector( in_ros_data.spawn_state.data[i].state.twist.angular.x, in_ros_data.spawn_state.data[i].state.twist.angular.y, in_ros_data.spawn_state.data[i].state.twist.angular.z ) );
		}

		for (int i = 0; i < in_ros_data.spawn_state.size; i++)
		{
			spawn_state_reference_frame.Add("");
			spawn_state_reference_frame[i].AppendChars(in_ros_data.spawn_state.data[i].state.reference_frame.data,in_ros_data.spawn_state.data[i].state.reference_frame.size);
		}

		for (int i = 0; i < in_ros_data.spawn_state.size; i++)
		{
			spawn_state_tags.Add("");
			spawn_state_tags[i].AppendChars(in_ros_data.spawn_state.data[i].tags.data[i].data,in_ros_data.spawn_state.data[i].tags.data[i].size);
		}
		
	}

	void SetROS2(ue_msgs__srv__SpawnEntities_Request& out_ros_data) const
	{
    	{
			FTCHARToUTF8 strUtf8( *xml );
			int32 strLength = strUtf8.Length();
			if (out_ros_data.xml.data != nullptr)
		{
			free(out_ros_data.xml.data);
		}
		out_ros_data.xml.data = (decltype(out_ros_data.xml.data))malloc((strLength+1)*sizeof(decltype(*out_ros_data.xml.data)));
		memcpy(out_ros_data.xml.data, TCHAR_TO_UTF8(*xml), (strLength+1)*sizeof(char));
			out_ros_data.xml.size = strLength;
			out_ros_data.xml.capacity = strLength + 1;
		}

		if (out_ros_data.spawn_state.data != nullptr)
		{
			free(out_ros_data.spawn_state.data);
		}
		out_ros_data.spawn_state.data = (decltype(out_ros_data.spawn_state.data))malloc(spawn_state_xml.Num() * (sizeof(spawn_state_xml) + sizeof(spawn_state_name) + sizeof(spawn_state_pose_position) + sizeof(spawn_state_pose_orientation) + sizeof(spawn_state_twist_linear) + sizeof(spawn_state_twist_angular) + sizeof(spawn_state_reference_frame) + sizeof(spawn_state_tags)));
		out_ros_data.spawn_state.size = spawn_state_xml.Num();
		out_ros_data.spawn_state.capacity = spawn_state_xml.Num();
		for (int i = 0; i < spawn_state_xml.Num(); i++)
		{
			{
				FTCHARToUTF8 strUtf8( *spawn_state_xml[i] );
			int32 strLength = strUtf8.Length();
				out_ros_data.spawn_state.data[i].xml.data = (decltype(out_ros_data.spawn_state.data[i].xml.data))malloc((strLength+1)*sizeof(decltype(*out_ros_data.spawn_state.data[i].xml.data)));
		memcpy(out_ros_data.spawn_state.data[i].xml.data, TCHAR_TO_UTF8(*spawn_state_xml[i]), (strLength+1)*sizeof(char));
				out_ros_data.spawn_state.data[i].xml.size = strLength;
				out_ros_data.spawn_state.data[i].xml.capacity = strLength + 1;
			}

			{
				FTCHARToUTF8 strUtf8( *spawn_state_name[i] );
			int32 strLength = strUtf8.Length();
				out_ros_data.spawn_state.data[i].state.name.data = (decltype(out_ros_data.spawn_state.data[i].state.name.data))malloc((strLength+1)*sizeof(decltype(*out_ros_data.spawn_state.data[i].state.name.data)));
		memcpy(out_ros_data.spawn_state.data[i].state.name.data, TCHAR_TO_UTF8(*spawn_state_name[i]), (strLength+1)*sizeof(char));
				out_ros_data.spawn_state.data[i].state.name.size = strLength;
				out_ros_data.spawn_state.data[i].state.name.capacity = strLength + 1;
			}

			out_ros_data.spawn_state.data[i].state.pose.position.x = spawn_state_pose_position[i].X;
			out_ros_data.spawn_state.data[i].state.pose.position.y = spawn_state_pose_position[i].Y;
			out_ros_data.spawn_state.data[i].state.pose.position.z = spawn_state_pose_position[i].Z;
			out_ros_data.spawn_state.data[i].state.pose.orientation.x = spawn_state_pose_orientation[i].X;
			out_ros_data.spawn_state.data[i].state.pose.orientation.y = spawn_state_pose_orientation[i].Y;
			out_ros_data.spawn_state.data[i].state.pose.orientation.z = spawn_state_pose_orientation[i].Z;
			out_ros_data.spawn_state.data[i].state.pose.orientation.w = spawn_state_pose_orientation[i].W;

			out_ros_data.spawn_state.data[i].state.twist.linear.x = spawn_state_twist_linear[i].X;
			out_ros_data.spawn_state.data[i].state.twist.linear.y = spawn_state_twist_linear[i].Y;
			out_ros_data.spawn_state.data[i].state.twist.linear.z = spawn_state_twist_linear[i].Z;
			out_ros_data.spawn_state.data[i].state.twist.angular.x = spawn_state_twist_angular[i].X;
			out_ros_data.spawn_state.data[i].state.twist.angular.y = spawn_state_twist_angular[i].Y;
			out_ros_data.spawn_state.data[i].state.twist.angular.z = spawn_state_twist_angular[i].Z;

			{
				FTCHARToUTF8 strUtf8( *spawn_state_reference_frame[i] );
				int32 strLength = strUtf8.Length();
				out_ros_data.spawn_state.data[i].state.reference_frame.data = (decltype(out_ros_data.spawn_state.data[i].state.reference_frame.data))malloc((strLength+1)*sizeof(decltype(*out_ros_data.spawn_state.data[i].state.reference_frame.data)));
				memcpy(out_ros_data.spawn_state.data[i].state.reference_frame.data, TCHAR_TO_UTF8(*spawn_state_reference_frame[i]), (strLength+1)*sizeof(char));
				out_ros_data.spawn_state.data[i].state.reference_frame.size = strLength;
				out_ros_data.spawn_state.data[i].state.reference_frame.capacity = strLength + 1;
			}

			{
				FTCHARToUTF8 strUtf8( *spawn_state_tags[i] );
			int32 strLength = strUtf8.Length();
				out_ros_data.spawn_state.data[i].tags.data[i].data = (decltype(out_ros_data.spawn_state.data[i].tags.data[i].data))malloc((strLength+1)*sizeof(decltype(*out_ros_data.spawn_state.data[i].tags.data[i].data)));
		memcpy(out_ros_data.spawn_state.data[i].tags.data[i].data, TCHAR_TO_UTF8(*spawn_state_tags[i]), (strLength+1)*sizeof(char));
				out_ros_data.spawn_state.data[i].tags.data[i].size = strLength;
				out_ros_data.spawn_state.data[i].tags.data[i].capacity = strLength + 1;
			}

			}
	
	}
};

USTRUCT(Blueprintable)
struct RCLUE_API FROSSpawnEntities_Response
{
	GENERATED_BODY()

public:
	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	bool success;

	UPROPERTY(EditAnywhere, BlueprintReadWrite)
	FString status_message;

	

	void SetFromROS2(const ue_msgs__srv__SpawnEntities_Response& in_ros_data)
	{
    	success = in_ros_data.success;

		status_message.AppendChars(in_ros_data.status_message.data, in_ros_data.status_message.size);
	}

	void SetROS2(ue_msgs__srv__SpawnEntities_Response& out_ros_data) const
	{
    	out_ros_data.success = success;

		{
			FTCHARToUTF8 strUtf8( *status_message );
			int32 strLength = strUtf8.Length();
			if (out_ros_data.status_message.data != nullptr)
		{
			free(out_ros_data.status_message.data);
		}
		out_ros_data.status_message.data = (decltype(out_ros_data.status_message.data))malloc((strLength+1)*sizeof(decltype(*out_ros_data.status_message.data)));
		memcpy(out_ros_data.status_message.data, TCHAR_TO_UTF8(*status_message), (strLength+1)*sizeof(char));
			out_ros_data.status_message.size = strLength;
			out_ros_data.status_message.capacity = strLength + 1;
		}

		
	}
};

UCLASS()
class RCLUE_API UROS2SpawnEntitiesSrv : public UROS2GenericSrv
{
	GENERATED_BODY()

public:
  	UFUNCTION(BlueprintCallable)
	virtual void Init() override;

  	UFUNCTION(BlueprintCallable)
	virtual void Fini() override;

	virtual const rosidl_service_type_support_t* GetTypeSupport() const override;
	
	// used by client
  	UFUNCTION(BlueprintCallable)
	void SetRequest(const FROSSpawnEntities_Request& Request);
	
	// used by service
  	UFUNCTION(BlueprintCallable)
	void GetRequest(FROSSpawnEntities_Request& Request) const;
	
	// used by service
  	UFUNCTION(BlueprintCallable)
	void SetResponse(const FROSSpawnEntities_Response& Response);
	
	// used by client
  	UFUNCTION(BlueprintCallable)
	void GetResponse(FROSSpawnEntities_Response& Response) const;
	
	virtual void* GetRequest() override;
	virtual void* GetResponse() override;

private:
	virtual FString SrvRequestToString() const override;
	virtual FString SrvResponseToString() const override;

	ue_msgs__srv__SpawnEntities_Request SpawnEntities_req;
	ue_msgs__srv__SpawnEntities_Response SpawnEntities_res;
};