// Copyright 2021 Rapyuta Robotics Co., Ltd.
// This code has been autogenerated from ue_msgs/srv/SpawnEntities.srv - do not
// modify

#pragma once

// UE
#include <CoreMinimal.h>

// ROS
#include "ue_msgs/srv/spawn_entities.h"

// rclUE
#include "Srvs/ROS2GenericSrv.h"
#include "rclcUtilities.h"

// Generated Msg/Srv/Action(can be empty)
#include "Msgs/ROS2EntityState.h"

// Generated
#include "ROS2SpawnEntities.generated.h"

// potential problem: if this struct is defined multiple times!
USTRUCT(Blueprintable)
struct RCLUE_API FROSSpawnEntitiesReq {
  GENERATED_BODY()

public:
  UPROPERTY(EditAnywhere, BlueprintReadWrite)
  TArray<FString> Type;

  UPROPERTY(EditAnywhere, BlueprintReadWrite)
  TArray<FROSEntityState> State;

  UPROPERTY(EditAnywhere, BlueprintReadWrite)
  TArray<FString> Tags;

  FROSSpawnEntitiesReq() {}

  void SetFromROS2(const ue_msgs__srv__SpawnEntities_Request &in_ros_data) {
    for (auto i = 0; i < in_ros_data.type.size; ++i) {
      Type.Emplace("");
      Type[i].AppendChars(in_ros_data.type.data[i].data,
                          in_ros_data.type.data[i].size);
    }

    for (auto i = 0; i < in_ros_data.state.size; ++i) {
      State[i].SetFromROS2(in_ros_data.state.data[i]);
    }

    for (auto i = 0; i < in_ros_data.tags.size; ++i) {
      Tags.Emplace("");
      Tags[i].AppendChars(in_ros_data.tags.data[i].data,
                          in_ros_data.tags.data[i].size);
    }
  }

  void SetROS2(ue_msgs__srv__SpawnEntities_Request &out_ros_data) const {
    out_ros_data.type.data = (decltype(out_ros_data.type.data))malloc(
        (Type.Num()) * sizeof(decltype(*out_ros_data.type.data)));
    for (auto i = 0; i < Type.Num(); ++i) {
      {
        FTCHARToUTF8 strUtf8(*Type[i]);
        int32 strLength = strUtf8.Length();
        if (out_ros_data.type.data[i].data != nullptr) {
          free(out_ros_data.type.data[i].data);
        }
        out_ros_data.type.data[i].data =
            (char *)malloc((strLength + 1) * sizeof(char));
        memcpy(out_ros_data.type.data[i].data, TCHAR_TO_UTF8(*Type[i]),
               (strLength + 1) * sizeof(char));
        out_ros_data.type.data[i].size = strLength;
        out_ros_data.type.data[i].capacity = strLength + 1;
      }
    }

    out_ros_data.state.data = (decltype(out_ros_data.state.data))malloc(
        (State.Num()) * sizeof(decltype(*out_ros_data.state.data)));

    for (auto i = 0; i < State.Num(); ++i) {
      State[i].SetROS2(out_ros_data.state.data[i]);
    }

    out_ros_data.state.size = State.Num();
    out_ros_data.state.capacity = State.Num();

    out_ros_data.tags.data = (decltype(out_ros_data.tags.data))malloc(
        (Tags.Num()) * sizeof(decltype(*out_ros_data.tags.data)));
    for (auto i = 0; i < Tags.Num(); ++i) {
      {
        FTCHARToUTF8 strUtf8(*Tags[i]);
        int32 strLength = strUtf8.Length();
        if (out_ros_data.tags.data[i].data != nullptr) {
          free(out_ros_data.tags.data[i].data);
        }
        out_ros_data.tags.data[i].data =
            (char *)malloc((strLength + 1) * sizeof(char));
        memcpy(out_ros_data.tags.data[i].data, TCHAR_TO_UTF8(*Tags[i]),
               (strLength + 1) * sizeof(char));
        out_ros_data.tags.data[i].size = strLength;
        out_ros_data.tags.data[i].capacity = strLength + 1;
      }
    }
  }
};

USTRUCT(Blueprintable)
struct RCLUE_API FROSSpawnEntitiesRes {
  GENERATED_BODY()

public:
  UPROPERTY(EditAnywhere, BlueprintReadWrite)
  bool bSuccess = false;

  UPROPERTY(EditAnywhere, BlueprintReadWrite)
  FString StatusMessage;

  FROSSpawnEntitiesRes() {}

  void SetFromROS2(const ue_msgs__srv__SpawnEntities_Response &in_ros_data) {
    bSuccess = in_ros_data.success;

    StatusMessage.AppendChars(in_ros_data.status_message.data,
                              in_ros_data.status_message.size);
  }

  void SetROS2(ue_msgs__srv__SpawnEntities_Response &out_ros_data) const {
    out_ros_data.success = bSuccess;

    {
      FTCHARToUTF8 strUtf8(*StatusMessage);
      int32 strLength = strUtf8.Length();
      out_ros_data.status_message.data =
          (decltype(out_ros_data.status_message.data))malloc(
              (strLength + 1) *
              sizeof(decltype(*out_ros_data.status_message.data)));
      memcpy(out_ros_data.status_message.data, TCHAR_TO_UTF8(*StatusMessage),
             (strLength + 1) * sizeof(char));
      out_ros_data.status_message.size = strLength;
      out_ros_data.status_message.capacity = strLength + 1;
    }
  }
};

UCLASS()
class RCLUE_API UROS2SpawnEntitiesSrv : public UROS2GenericSrv {
  GENERATED_BODY()

public:
  UFUNCTION(BlueprintCallable)
  virtual void Init() override;

  UFUNCTION(BlueprintCallable)
  virtual void Fini() override;

  virtual const rosidl_service_type_support_t *GetTypeSupport() const override;

  // used by client
  UFUNCTION(BlueprintCallable)
  void SetRequest(const FROSSpawnEntitiesReq &Request);

  // used by service
  UFUNCTION(BlueprintCallable)
  void GetRequest(FROSSpawnEntitiesReq &Request) const;

  // used by service
  UFUNCTION(BlueprintCallable)
  void SetResponse(const FROSSpawnEntitiesRes &Response);

  // used by client
  UFUNCTION(BlueprintCallable)
  void GetResponse(FROSSpawnEntitiesRes &Response) const;

  virtual void *GetRequest() override;
  virtual void *GetResponse() override;

private:
  virtual FString SrvRequestToString() const override;
  virtual FString SrvResponseToString() const override;

  ue_msgs__srv__SpawnEntities_Request SpawnEntities_req;
  ue_msgs__srv__SpawnEntities_Response SpawnEntities_res;
};