// Copyright 2021 Rapyuta Robotics Co., Ltd.
// This code has been autogenerated from ue_msgs/srv/SpawnEntity.srv - do not
// modify

#pragma once

// UE
#include <CoreMinimal.h>

// ROS
#include "ue_msgs/srv/spawn_entity.h"

// rclUE
#include "Srvs/ROS2GenericSrv.h"
#include "rclcUtilities.h"

// Generated Msg/Srv/Action(can be empty)
#include "Msgs/ROS2EntityState.h"

// Generated
#include "ROS2SpawnEntity.generated.h"

// potential problem: if this struct is defined multiple times!
USTRUCT(Blueprintable)
struct RCLUE_API FROSSpawnEntityReq {
  GENERATED_BODY()

public:
  UPROPERTY(EditAnywhere, BlueprintReadWrite)
  FString Xml;

  UPROPERTY(EditAnywhere, BlueprintReadWrite)
  FString RobotNamespace;

  UPROPERTY(EditAnywhere, BlueprintReadWrite)
  FROSEntityState State;

  UPROPERTY(EditAnywhere, BlueprintReadWrite)
  TArray<FString> Tags;

  FROSSpawnEntityReq() {}

  void SetFromROS2(const ue_msgs__srv__SpawnEntity_Request &in_ros_data) {
    Xml.AppendChars(in_ros_data.xml.data, in_ros_data.xml.size);

    RobotNamespace.AppendChars(in_ros_data.robot_namespace.data,
                               in_ros_data.robot_namespace.size);

    State.SetFromROS2(in_ros_data.state);

    for (auto i = 0; i < in_ros_data.tags.size; ++i) {
      Tags.Emplace("");
      Tags[i].AppendChars(in_ros_data.tags.data[i].data,
                          in_ros_data.tags.data[i].size);
    }
  }

  void SetROS2(ue_msgs__srv__SpawnEntity_Request &out_ros_data) const {
    {
      FTCHARToUTF8 strUtf8(*Xml);
      int32 strLength = strUtf8.Length();
      out_ros_data.xml.data = (decltype(out_ros_data.xml.data))malloc(
          (strLength + 1) * sizeof(decltype(*out_ros_data.xml.data)));
      memcpy(out_ros_data.xml.data, TCHAR_TO_UTF8(*Xml),
             (strLength + 1) * sizeof(char));
      out_ros_data.xml.size = strLength;
      out_ros_data.xml.capacity = strLength + 1;
    }

    {
      FTCHARToUTF8 strUtf8(*RobotNamespace);
      int32 strLength = strUtf8.Length();
      out_ros_data.robot_namespace.data =
          (decltype(out_ros_data.robot_namespace.data))malloc(
              (strLength + 1) *
              sizeof(decltype(*out_ros_data.robot_namespace.data)));
      memcpy(out_ros_data.robot_namespace.data, TCHAR_TO_UTF8(*RobotNamespace),
             (strLength + 1) * sizeof(char));
      out_ros_data.robot_namespace.size = strLength;
      out_ros_data.robot_namespace.capacity = strLength + 1;
    }

    State.SetROS2(out_ros_data.state);

    out_ros_data.tags.data = (decltype(out_ros_data.tags.data))malloc(
        (Tags.Num()) * sizeof(decltype(*out_ros_data.tags.data)));
    for (auto i = 0; i < Tags.Num(); ++i) {
      {
        FTCHARToUTF8 strUtf8(*Tags[i]);
        int32 strLength = strUtf8.Length();
        if (out_ros_data.tags.data[i].data != nullptr) {
          free(out_ros_data.tags.data[i].data);
        }
        out_ros_data.tags.data[i].data =
            (char *)malloc((strLength + 1) * sizeof(char));
        memcpy(out_ros_data.tags.data[i].data, TCHAR_TO_UTF8(*Tags[i]),
               (strLength + 1) * sizeof(char));
        out_ros_data.tags.data[i].size = strLength;
        out_ros_data.tags.data[i].capacity = strLength + 1;
      }
    }
  }
};

USTRUCT(Blueprintable)
struct RCLUE_API FROSSpawnEntityRes {
  GENERATED_BODY()

public:
  UPROPERTY(EditAnywhere, BlueprintReadWrite)
  bool bSuccess = false;

  UPROPERTY(EditAnywhere, BlueprintReadWrite)
  FString StatusMessage;

  FROSSpawnEntityRes() {}

  void SetFromROS2(const ue_msgs__srv__SpawnEntity_Response &in_ros_data) {
    bSuccess = in_ros_data.success;

    StatusMessage.AppendChars(in_ros_data.status_message.data,
                              in_ros_data.status_message.size);
  }

  void SetROS2(ue_msgs__srv__SpawnEntity_Response &out_ros_data) const {
    out_ros_data.success = bSuccess;

    {
      FTCHARToUTF8 strUtf8(*StatusMessage);
      int32 strLength = strUtf8.Length();
      out_ros_data.status_message.data =
          (decltype(out_ros_data.status_message.data))malloc(
              (strLength + 1) *
              sizeof(decltype(*out_ros_data.status_message.data)));
      memcpy(out_ros_data.status_message.data, TCHAR_TO_UTF8(*StatusMessage),
             (strLength + 1) * sizeof(char));
      out_ros_data.status_message.size = strLength;
      out_ros_data.status_message.capacity = strLength + 1;
    }
  }
};

UCLASS()
class RCLUE_API UROS2SpawnEntitySrv : public UROS2GenericSrv {
  GENERATED_BODY()

public:
  UFUNCTION(BlueprintCallable)
  virtual void Init() override;

  UFUNCTION(BlueprintCallable)
  virtual void Fini() override;

  virtual const rosidl_service_type_support_t *GetTypeSupport() const override;

  // used by client
  UFUNCTION(BlueprintCallable)
  void SetRequest(const FROSSpawnEntityReq &Request);

  // used by service
  UFUNCTION(BlueprintCallable)
  void GetRequest(FROSSpawnEntityReq &Request) const;

  // used by service
  UFUNCTION(BlueprintCallable)
  void SetResponse(const FROSSpawnEntityRes &Response);

  // used by client
  UFUNCTION(BlueprintCallable)
  void GetResponse(FROSSpawnEntityRes &Response) const;

  virtual void *GetRequest() override;
  virtual void *GetResponse() override;

private:
  virtual FString SrvRequestToString() const override;
  virtual FString SrvResponseToString() const override;

  ue_msgs__srv__SpawnEntity_Request SpawnEntity_req;
  ue_msgs__srv__SpawnEntity_Response SpawnEntity_res;
};