// Copyright 2021 Rapyuta Robotics Co., Ltd.
// This code has been autogenerated from nav_msgs/srv/GetPlan.srv - do not modify

#pragma once

// UE
#include "CoreMinimal.h"

// ROS
#include "nav_msgs/srv/get_plan.h"

// rclUE
#include "Srvs/ROS2GenericSrv.h"
#include "rclcUtilities.h"

// Generated Msg/Srv/Action(can be empty)
#include "Msgs/ROS2Path.h"
#include "Msgs/ROS2PoseStamped.h"

// Generated
#include "ROS2GetPlan.generated.h"

// potential problem: if this struct is defined multiple times!
USTRUCT(Blueprintable)
struct RCLUE_API FROSGetPlanReq
{
    GENERATED_BODY()

public:
    UPROPERTY(EditAnywhere, BlueprintReadWrite)
    FROSPoseStamped Start;

    UPROPERTY(EditAnywhere, BlueprintReadWrite)
    FROSPoseStamped Goal;

    UPROPERTY(EditAnywhere, BlueprintReadWrite)
    float Tolerance = 0.f;

    FROSGetPlanReq()
    {
    }

    void SetFromROS2(const nav_msgs__srv__GetPlan_Request& in_ros_data)
    {
        Start.SetFromROS2(in_ros_data.start);

        Goal.SetFromROS2(in_ros_data.goal);

        Tolerance = in_ros_data.tolerance;
    }

    void SetROS2(nav_msgs__srv__GetPlan_Request& out_ros_data) const
    {
        Start.SetROS2(out_ros_data.start);

        Goal.SetROS2(out_ros_data.goal);

        out_ros_data.tolerance = Tolerance;
    }
};

USTRUCT(Blueprintable)
struct RCLUE_API FROSGetPlanRes
{
    GENERATED_BODY()

public:
    UPROPERTY(EditAnywhere, BlueprintReadWrite)
    FROSPath Plan;

    FROSGetPlanRes()
    {
    }

    void SetFromROS2(const nav_msgs__srv__GetPlan_Response& in_ros_data)
    {
        Plan.SetFromROS2(in_ros_data.plan);
    }

    void SetROS2(nav_msgs__srv__GetPlan_Response& out_ros_data) const
    {
        Plan.SetROS2(out_ros_data.plan);
    }
};

UCLASS()
class RCLUE_API UROS2GetPlanSrv : public UROS2GenericSrv
{
    GENERATED_BODY()

public:
    UFUNCTION(BlueprintCallable)
    virtual void Init() override;

    UFUNCTION(BlueprintCallable)
    virtual void Fini() override;

    virtual const rosidl_service_type_support_t* GetTypeSupport() const override;

    // used by client
    UFUNCTION(BlueprintCallable)
    void SetRequest(const FROSGetPlanReq& Request);

    // used by service
    UFUNCTION(BlueprintCallable)
    void GetRequest(FROSGetPlanReq& Request) const;

    // used by service
    UFUNCTION(BlueprintCallable)
    void SetResponse(const FROSGetPlanRes& Response);

    // used by client
    UFUNCTION(BlueprintCallable)
    void GetResponse(FROSGetPlanRes& Response) const;

    virtual void* GetRequest() override;
    virtual void* GetResponse() override;

private:
    virtual FString SrvRequestToString() const override;
    virtual FString SrvResponseToString() const override;

    nav_msgs__srv__GetPlan_Request GetPlan_req;
    nav_msgs__srv__GetPlan_Response GetPlan_res;
};
