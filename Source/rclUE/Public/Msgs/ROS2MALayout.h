// Copyright 2021 Rapyuta Robotics Co., Ltd.
// This code has been autogenerated from
// example_interfaces/msg/MultiArrayLayout.msg - do not modify

#pragma once

// UE
#include <CoreMinimal.h>

// ROS
#include "example_interfaces/msg/multi_array_layout.h"

// rclUE
#include "Msgs/ROS2GenericMsg.h"
#include "rclcUtilities.h"

// Generated Msg/Srv/Action(can be empty)
#include "Msgs/ROS2MADim.h"

// Generated
#include "ROS2MALayout.generated.h"

USTRUCT(Blueprintable)
struct RCLUE_API FROSMALayout {
  GENERATED_BODY()

public:
  UPROPERTY(EditAnywhere, BlueprintReadWrite)
  TArray<FROSMADim> Dim;

  UPROPERTY(EditAnywhere)
  unsigned int DataOffset = 0;

  FROSMALayout() {}

  void
  SetFromROS2(const example_interfaces__msg__MultiArrayLayout &in_ros_data) {
    for (auto i = 0; i < in_ros_data.dim.size; ++i) {
      Dim[i].SetFromROS2(in_ros_data.dim.data[i]);
    }

    DataOffset = in_ros_data.data_offset;
  }

  void SetROS2(example_interfaces__msg__MultiArrayLayout &out_ros_data) const {
    if (out_ros_data.dim.data != nullptr) {
      free(out_ros_data.dim.data);
    }
    out_ros_data.dim.data = (decltype(out_ros_data.dim.data))malloc(
        (Dim.Num()) * sizeof(decltype(*out_ros_data.dim.data)));

    for (auto i = 0; i < Dim.Num(); ++i) {
      Dim[i].SetROS2(out_ros_data.dim.data[i]);
    }

    out_ros_data.dim.size = Dim.Num();
    out_ros_data.dim.capacity = Dim.Num();

    out_ros_data.data_offset = DataOffset;
  }
};

UCLASS()
class RCLUE_API UROS2MALayoutMsg : public UROS2GenericMsg {
  GENERATED_BODY()

public:
  virtual void Init() override;
  virtual void Fini() override;

  virtual const rosidl_message_type_support_t *GetTypeSupport() const override;

  UFUNCTION(BlueprintCallable)
  void SetMsg(const FROSMALayout &Input);

  UFUNCTION(BlueprintCallable)
  void GetMsg(FROSMALayout &Output) const;

  virtual void *Get() override;

private:
  virtual FString MsgToString() const override;

  example_interfaces__msg__MultiArrayLayout multi_array_layout_msg;
};