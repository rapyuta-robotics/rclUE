// Copyright 2021 Rapyuta Robotics Co., Ltd.
// This code has been autogenerated from sensor_msgs/msg/PointCloud2.msg - do
// not modify

#pragma once

// UE
#include <CoreMinimal.h>

// ROS
#include "sensor_msgs/msg/point_cloud2.h"

// rclUE
#include "Msgs/ROS2GenericMsg.h"
#include "rclcUtilities.h"

// Generated Msg/Srv/Action(can be empty)
#include "Msgs/ROS2Header.h"
#include "Msgs/ROS2PointField.h"

// Generated
#include "ROS2PointCloud2.generated.h"

USTRUCT(Blueprintable)
struct RCLUE_API FROSPointCloud2 {
  GENERATED_BODY()

public:
  UPROPERTY(EditAnywhere, BlueprintReadWrite)
  FROSHeader Header;

  UPROPERTY(EditAnywhere)
  unsigned int Height = 0;

  UPROPERTY(EditAnywhere)
  unsigned int Width = 0;

  UPROPERTY(EditAnywhere, BlueprintReadWrite)
  TArray<FROSPointField> Fields;

  UPROPERTY(EditAnywhere, BlueprintReadWrite)
  bool bIsBigendian = false;

  UPROPERTY(EditAnywhere)
  unsigned int PointStep = 0;

  UPROPERTY(EditAnywhere)
  unsigned int RowStep = 0;

  UPROPERTY(EditAnywhere)
  TArray<uint8> Data;

  UPROPERTY(EditAnywhere, BlueprintReadWrite)
  bool bIsDense = false;

  FROSPointCloud2() {}

  void SetFromROS2(const sensor_msgs__msg__PointCloud2 &in_ros_data) {
    Header.SetFromROS2(in_ros_data.header);

    Height = in_ros_data.height;

    Width = in_ros_data.width;

    for (auto i = 0; i < in_ros_data.fields.size; ++i) {
      Fields[i].SetFromROS2(in_ros_data.fields.data[i]);
    }

    bIsBigendian = in_ros_data.is_bigendian;

    PointStep = in_ros_data.point_step;

    RowStep = in_ros_data.row_step;

    for (auto i = 0; i < in_ros_data.data.size; ++i) {
      Data.Emplace(in_ros_data.data.data[i]);
    }

    bIsDense = in_ros_data.is_dense;
  }

  void SetROS2(sensor_msgs__msg__PointCloud2 &out_ros_data) const {
    Header.SetROS2(out_ros_data.header);

    out_ros_data.height = Height;

    out_ros_data.width = Width;

    if (out_ros_data.fields.data != nullptr) {
      free(out_ros_data.fields.data);
    }
    out_ros_data.fields.data = (decltype(out_ros_data.fields.data))malloc(
        (Fields.Num()) * sizeof(decltype(*out_ros_data.fields.data)));

    for (auto i = 0; i < Fields.Num(); ++i) {
      Fields[i].SetROS2(out_ros_data.fields.data[i]);
    }

    out_ros_data.fields.size = Fields.Num();
    out_ros_data.fields.capacity = Fields.Num();

    out_ros_data.is_bigendian = bIsBigendian;

    out_ros_data.point_step = PointStep;

    out_ros_data.row_step = RowStep;

    if (out_ros_data.data.data != nullptr) {
      free(out_ros_data.data.data);
    }
    out_ros_data.data.data = (decltype(out_ros_data.data.data))malloc(
        (Data.Num()) * sizeof(decltype(*out_ros_data.data.data)));

    for (auto i = 0; i < Data.Num(); ++i) {
      out_ros_data.data.data[i] = Data[i];
    }

    out_ros_data.data.size = Data.Num();
    out_ros_data.data.capacity = Data.Num();

    out_ros_data.is_dense = bIsDense;
  }
};

UCLASS()
class RCLUE_API UROS2PointCloud2Msg : public UROS2GenericMsg {
  GENERATED_BODY()

public:
  virtual void Init() override;
  virtual void Fini() override;

  virtual const rosidl_message_type_support_t *GetTypeSupport() const override;

  UFUNCTION(BlueprintCallable)
  void SetMsg(const FROSPointCloud2 &Input);

  UFUNCTION(BlueprintCallable)
  void GetMsg(FROSPointCloud2 &Output) const;

  virtual void *Get() override;

private:
  virtual FString MsgToString() const override;

  sensor_msgs__msg__PointCloud2 point_cloud2_msg;
};