// Copyright 2023 Rapyuta Robotics Co., Ltd.
// This code has been autogenerated from shape_msgs/msg/Mesh.msg - do not modify

#pragma once

// UE
#include "CoreMinimal.h"

// ROS
#include "shape_msgs/msg/mesh.h"

// rclUE
#include "Msgs/ROS2GenericMsg.h"
#include "rclcUtilities.h"

// Generated Msg/Srv/Action(can be empty)
#include "Msgs/ROS2MeshTriangle.h"
#include "geometry_msgs/msg/detail/point__functions.h"
#include "shape_msgs/msg/detail/mesh_triangle__functions.h"

// Generated
#include "ROS2Mesh.generated.h"

USTRUCT(Blueprintable)
struct RCLUE_API FROSMesh
{
    GENERATED_BODY()

public:
    UPROPERTY(EditAnywhere, BlueprintReadWrite)
    TArray<FROSMeshTriangle> Triangles;

    UPROPERTY(EditAnywhere, BlueprintReadWrite)
    TArray<FVector> Vertices;

    FROSMesh()
    {
    }

    void SetFromROS2(const shape_msgs__msg__Mesh& in_ros_data)
    {
        UROS2Utils::SequenceROSToUEArray<shape_msgs__msg__MeshTriangle, FROSMeshTriangle>(
            in_ros_data.triangles.data, Triangles, in_ros_data.triangles.size);

        UROS2Utils::VectorSequenceROSToUEArray<geometry_msgs__msg__Point>(
            in_ros_data.vertices.data, Vertices, in_ros_data.vertices.size);
    }

    void SetROS2(shape_msgs__msg__Mesh& out_ros_data) const
    {
        if (out_ros_data.triangles.data)
        {
            shape_msgs__msg__MeshTriangle__Sequence__fini(&out_ros_data.triangles);
        }
        if (!shape_msgs__msg__MeshTriangle__Sequence__init(&out_ros_data.triangles, Triangles.Num()))
        {
            UE_LOG_WITH_INFO(LogTemp, Error, TEXT("failed to create array for field out_ros_data.triangles  "));
        }
        UROS2Utils::ArrayUEToROSSequence<shape_msgs__msg__MeshTriangle, FROSMeshTriangle>(
            Triangles, out_ros_data.triangles.data, Triangles.Num());

        if (out_ros_data.vertices.data)
        {
            geometry_msgs__msg__Point__Sequence__fini(&out_ros_data.vertices);
        }
        if (!geometry_msgs__msg__Point__Sequence__init(&out_ros_data.vertices, Vertices.Num()))
        {
            UE_LOG_WITH_INFO(LogTemp, Error, TEXT("failed to create array for field out_ros_data.vertices  "));
        }
        UROS2Utils::VectorArrayUEToROSSequence<geometry_msgs__msg__Point>(Vertices, out_ros_data.vertices.data, Vertices.Num());
    }
};

UCLASS()
class RCLUE_API UROS2MeshMsg : public UROS2GenericMsg
{
    GENERATED_BODY()

public:
    virtual void Init() override;
    virtual void Fini() override;

    virtual const rosidl_message_type_support_t* GetTypeSupport() const override;

    UFUNCTION(BlueprintCallable)
    void SetMsg(const FROSMesh& Input);

    UFUNCTION(BlueprintCallable)
    void GetMsg(FROSMesh& Output) const;

    virtual void* Get() override;

private:
    virtual FString MsgToString() const override;

    shape_msgs__msg__Mesh mesh_msg;
};
