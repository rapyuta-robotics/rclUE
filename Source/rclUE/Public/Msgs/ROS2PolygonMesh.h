// Copyright 2021 Rapyuta Robotics Co., Ltd.
// This code has been autogenerated from pcl_msgs/msg/PolygonMesh.msg - do not
// modify

#pragma once

// UE
#include <CoreMinimal.h>

// ROS
#include "pcl_msgs/msg/polygon_mesh.h"

// rclUE
#include "Msgs/ROS2GenericMsg.h"
#include "rclcUtilities.h"

// Generated Msg/Srv/Action(can be empty)
#include "Msgs/ROS2Header.h"
#include "Msgs/ROS2PointCloud2.h"
#include "Msgs/ROS2Vertices.h"

// Generated
#include "ROS2PolygonMesh.generated.h"

USTRUCT(Blueprintable)
struct RCLUE_API FROSPolygonMesh {
  GENERATED_BODY()

public:
  UPROPERTY(EditAnywhere, BlueprintReadWrite)
  FROSHeader Header;

  UPROPERTY(EditAnywhere, BlueprintReadWrite)
  FROSPointCloud2 Cloud;

  UPROPERTY(EditAnywhere, BlueprintReadWrite)
  TArray<FROSVertices> Polygons;

  FROSPolygonMesh() {}

  void SetFromROS2(const pcl_msgs__msg__PolygonMesh &in_ros_data) {
    Header.SetFromROS2(in_ros_data.header);

    Cloud.SetFromROS2(in_ros_data.cloud);

    for (auto i = 0; i < in_ros_data.polygons.size; ++i) {
      Polygons[i].SetFromROS2(in_ros_data.polygons.data[i]);
    }
  }

  void SetROS2(pcl_msgs__msg__PolygonMesh &out_ros_data) const {
    Header.SetROS2(out_ros_data.header);

    Cloud.SetROS2(out_ros_data.cloud);

    out_ros_data.polygons.data = (decltype(out_ros_data.polygons.data))malloc(
        (Polygons.Num()) * sizeof(decltype(*out_ros_data.polygons.data)));

    for (auto i = 0; i < Polygons.Num(); ++i) {
      Polygons[i].SetROS2(out_ros_data.polygons.data[i]);
    }

    out_ros_data.polygons.size = Polygons.Num();
    out_ros_data.polygons.capacity = Polygons.Num();
  }
};

UCLASS()
class RCLUE_API UROS2PolygonMeshMsg : public UROS2GenericMsg {
  GENERATED_BODY()

public:
  virtual void Init() override;
  virtual void Fini() override;

  virtual const rosidl_message_type_support_t *GetTypeSupport() const override;

  UFUNCTION(BlueprintCallable)
  void SetMsg(const FROSPolygonMesh &Input);

  UFUNCTION(BlueprintCallable)
  void GetMsg(FROSPolygonMesh &Output) const;

  virtual void *Get() override;

private:
  virtual FString MsgToString() const override;

  pcl_msgs__msg__PolygonMesh polygon_mesh_msg;
};