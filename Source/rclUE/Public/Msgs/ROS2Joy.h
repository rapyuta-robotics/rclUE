// Copyright 2021 Rapyuta Robotics Co., Ltd.
// This code has been autogenerated from sensor_msgs/msg/Joy.msg - do not modify

#pragma once

// UE
#include <CoreMinimal.h>

// ROS
#include "sensor_msgs/msg/joy.h"

// rclUE
#include "Msgs/ROS2GenericMsg.h"
#include "rclcUtilities.h"

// Generated Msg/Srv/Action(can be empty)
#include "Msgs/ROS2Header.h"

// Generated
#include "ROS2Joy.generated.h"

USTRUCT(Blueprintable)
struct RCLUE_API FROSJoy {
  GENERATED_BODY()

public:
  UPROPERTY(EditAnywhere, BlueprintReadWrite)
  FROSHeader Header;

  UPROPERTY(EditAnywhere, BlueprintReadWrite)
  TArray<float> Axes;

  UPROPERTY(EditAnywhere, BlueprintReadWrite)
  TArray<int> Buttons;

  FROSJoy() {}

  void SetFromROS2(const sensor_msgs__msg__Joy &in_ros_data) {
    Header.SetFromROS2(in_ros_data.header);

    for (auto i = 0; i < in_ros_data.axes.size; ++i) {
      Axes.Emplace(in_ros_data.axes.data[i]);
    }

    for (auto i = 0; i < in_ros_data.buttons.size; ++i) {
      Buttons.Emplace(in_ros_data.buttons.data[i]);
    }
  }

  void SetROS2(sensor_msgs__msg__Joy &out_ros_data) const {
    Header.SetROS2(out_ros_data.header);

    if (out_ros_data.axes.data != nullptr) {
      free(out_ros_data.axes.data);
    }
    out_ros_data.axes.data = (decltype(out_ros_data.axes.data))malloc(
        (Axes.Num()) * sizeof(decltype(*out_ros_data.axes.data)));

    for (auto i = 0; i < Axes.Num(); ++i) {
      out_ros_data.axes.data[i] = Axes[i];
    }

    out_ros_data.axes.size = Axes.Num();
    out_ros_data.axes.capacity = Axes.Num();

    if (out_ros_data.buttons.data != nullptr) {
      free(out_ros_data.buttons.data);
    }
    out_ros_data.buttons.data = (decltype(out_ros_data.buttons.data))malloc(
        (Buttons.Num()) * sizeof(decltype(*out_ros_data.buttons.data)));

    for (auto i = 0; i < Buttons.Num(); ++i) {
      out_ros_data.buttons.data[i] = Buttons[i];
    }

    out_ros_data.buttons.size = Buttons.Num();
    out_ros_data.buttons.capacity = Buttons.Num();
  }
};

UCLASS()
class RCLUE_API UROS2JoyMsg : public UROS2GenericMsg {
  GENERATED_BODY()

public:
  virtual void Init() override;
  virtual void Fini() override;

  virtual const rosidl_message_type_support_t *GetTypeSupport() const override;

  UFUNCTION(BlueprintCallable)
  void SetMsg(const FROSJoy &Input);

  UFUNCTION(BlueprintCallable)
  void GetMsg(FROSJoy &Output) const;

  virtual void *Get() override;

private:
  virtual FString MsgToString() const override;

  sensor_msgs__msg__Joy joy_msg;
};